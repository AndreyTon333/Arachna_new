from aiogram import F, Router, Bot
from aiogram.types import Message, CallbackQuery, InputMediaPhoto
from aiogram.filters import and_f, or_f
from lexicon.lexicon_ru import (LEXICON_Invite as LI, LEXICON_BUTTON as LBut, LEXICON_ALL_THINGS as All_Th,
                                LEXICON_scribe_trash as LScrTr, LEXICON_scribe_wardrobe as LScrWard,
                                dict_gun_description as dgd, dict_armor, dict_percent_xp)
from lexicon.foto import PHOTO as ph
import keyboards.keybords as kb
import database.requests as rq
import database.help_function as hf
from aiogram.fsm.context import FSMContext
#from handlers.location_anather_h.meadows_loot import MeadowsLootFSM

router = Router()

import logging


# spec1 --- specifications_inner
@router.callback_query(F.data == 'specifications_inner')
@router.callback_query(F.data == 'specifications_lp')
@router.callback_query(F.data == 'specifications_meadows')
@router.callback_query(F.data == 'specifications_go_to')
async def spec1(clb: CallbackQuery, state: FSMContext):
    logging.info(f'spec1')
    tg_id = clb.message.chat.id
    if clb.data != 'specifications_inner': # –µ—Å–ª–∏ –ø—Ä–∏—à–ª–∏ —Å
        if clb.data == 'specifications_lp':
            clb_back = 'start'
        elif clb.data == 'specifications_meadows':
            clb_back = 'location_meadows'
        elif clb.data == 'specifications_go_to':
            clb_back = 'location_go_to_back'
        await rq.set_backpack_leana(tg_id, 'xp', clb_back)
    else:
        clb_back = (await rq.get_BackpackLeana(tg_id))['xp']

    #if await state.get_state() == MeadowsLootFSM.state_meadows1:
    #    clb_back = 'location_meadows'
    #else:
    #    clb_back = 'start'

    dict_kb={'–û–±—â–∏–µ': 'overall_spec', '–ë—Ä–æ–Ω–∏': 'armor_spec',
            '–û—Ä—É–∂–∏—è': 'gun_spec', '–ù–∞–∑–∞–¥': clb_back,}
    keyboard = kb.create_in_kb(2, **dict_kb)
    await clb.message.edit_media(media=InputMediaPhoto(media=ph['N4']))
    await clb.message.edit_caption(caption='–•–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏', reply_markup=keyboard)
    await state.clear()




# spec2 --- overall_spec
@router.callback_query(F.data == 'overall_spec')
async def spec2(clb: CallbackQuery):
    logging.info(f'spec2')

    # –∑–∞–ø—Ä–æ—Å –≤ –ë–î
    data_user = await rq.get_user_dict(tg_id=clb.message.chat.id)
    name_user = data_user['name_user']
    if name_user == 'username':
        name_user = clb.message.chat.id
    xp = data_user['xp']
    kristals = data_user['kristals']
    bio = (await rq.get_StorageBIO(tg_id=clb.message.chat.id))['bio']

    dict_kb={'–ù–∞–∑–∞–¥': 'specifications_inner',}
    keyboard = kb.create_in_kb(1, **dict_kb)
    await clb.message.edit_media(media=InputMediaPhoto(media=ph['N4']))
    await clb.message.edit_caption(
        caption=f'–ò–º—è {name_user}\n‚ù§Ô∏è(—Ö–ø) {xp}\nüõ¢Ô∏è(–±–∏–æ—Ä–µ—Å—É—Ä—Å) {bio}\nüíé(–∫—Ä–∏—Å—Ç–∞–ª–ª—ã) {kristals}\n\n',
        reply_markup=keyboard)
    await clb.answer()



# spec3 --- gun_spec
@router.callback_query(F.data == 'gun_spec')
async def spec3(clb: CallbackQuery):
    logging.info(f'spec3')
    tg_id=clb.message.chat.id

    # –∑–∞–ø—Ä–æ—Å –≤ –ë–î
    data_user = await rq.get_user_dict(tg_id)
    left_hand = data_user['left_hand'] #.split('!') if '!' in left_hand else data_user['left_hand']
    right_hand = data_user['right_hand']# .split('!') if '!' in right_hand else data_user['right_hand']

    # –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é —Å—Ç–∞–≤–∏–º —Ç–µ–∫—Å—Ç –∏ –∫–æ–ª–±—ç–∫–∏ –Ω–∞ '' –Ω–∞ –Ω–∏—á–µ–≥–æ
    # –∏ –≤ —É—Å–ª–æ–≤–∏–∏, —á—Ç–æ –æ—Ä—É–∂–∏–µ –µ—Å—Ç—å - –º–µ–Ω—è–µ–º
    text_left_hand, text_right_hand = "[‚öî1 –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç]", "[‚öî2 –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç]"
    clb_left, clb_right =  'no!gun_in_hand', 'no!gun_in_hand'
    text_left_percent, text_right_percent = f"[{dgd['nothink'][0]}]", f"[{dgd['nothink'][0]}]"
    clb_left_percent, clb_right_percent = 'left_hand!gun_percent', 'right_hand!gun_percent'

    list_dict: list =[]

    if 'G17' in left_hand or 'spear' in left_hand:
    # –Ω–∞–ø—Ä–∏–º–µ—Ä —Ç–∞–∫, —Å –≤–æ—Å–∫–ª–∏—Ü–∞—Ç–µ–ª—å–Ω—ã–º –∑–Ω–∞–∫–æ–º G17!10
        list_ = left_hand.split('!')
        xp = data_user['xp_left_hand']
        new_percent = (100 * xp) / dict_percent_xp[list_[0]]
        new_percent = round(new_percent) if new_percent >= 1 else int(new_percent)

        if new_percent >=1: # –∑–∞–Ω—É–ª—è–µ–º –≤ —Ç–∞–ª–∏—Ü–µ User
            await rq.set_user(tg_id, 'left_hand', f'{list_[0]}!{new_percent}')
            text_left_hand = f"[‚öî1 {All_Th[list_[0]]}]"
            clb_left = f'{list_[0]}!gun_in_hand'

            text_left_percent = f'[{new_percent}% {dgd[list_[0]][0]}]' # –ø—Ä–∞–≤–∞—è —á–∞—Å—Ç—å, –ø—Ä–æ—Ü–µ–Ω—Ç–æ–≤–∫–∞
        #clb_left_percent = f'{list_[0]}!gun_percent'
    list_dict.append([{text_left_hand: clb_left}, {text_left_percent: clb_left_percent}])


    if 'G17' in right_hand or 'spear' in right_hand:
    # –Ω–∞–ø—Ä–∏–º–µ—Ä —Ç–∞–∫, —Å –≤–æ—Å–∫–ª–∏—Ü–∞—Ç–µ–ª—å–Ω—ã–º –∑–Ω–∞–∫–æ–º G17!10
        list_ = right_hand.split('!')
        xp = data_user['xp_right_hand']
        new_percent = (100 * xp) / dict_percent_xp[list_[0]]
        new_percent = round(new_percent) if new_percent >= 1 else int(new_percent)


        if new_percent >=1: # –∑–∞–Ω—É–ª—è–µ–º –≤ —Ç–∞–ª–∏—Ü–µ User
            await rq.set_user(tg_id, 'right_hand', f'{list_[0]}!{new_percent}')
            text_right_hand = f"[‚öî2 {All_Th[list_[0]]}]"
            clb_right = f'{list_[0]}!gun_in_hand'

            text_right_percent = f'[{new_percent}% {dgd[list_[0]][0]}]'
        #clb_right_percent = f'{list_[0]}!gun_percent'
    list_dict.append([{text_right_hand: clb_right}, {text_right_percent: clb_right_percent}])

    list_dict.append([{'–ù–∞–∑–∞–¥': 'specifications_inner'}])
    #logging.info(f'list_dict = {list_dict}')
    keyboard = kb.create_in_kb_from_list_dict(list_dict=list_dict)
    await clb.message.edit_caption(
        caption='–û—Ä—É–∂–∏–µ –≤ —Ä—É–∫–∞—Ö:\n',
        reply_markup=keyboard,
        parse_mode=None
    )



# spec4 --- F.data.endwith('gun_spec')
@router.callback_query(F.data.endswith('gun_in_hand'))
async def spec4(clb: CallbackQuery):
    logging.info(f'spec4 --- clb.data = {clb.data}')

    name_gun = clb.data.split('!')[0]
    str_answer:str ='PUSTO'
    if name_gun == 'no':
        str_answer = '–û—Ä—É–∂–∏–µ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç'
        await clb.message.edit_media(media=InputMediaPhoto(media=ph['N17'])) # –∫—Ä–∞—Å–Ω—ã–π –∫—Ä–µ—Å—Ç
    elif name_gun == 'G17':
        str_answer = dgd['G17_description']
        logging.info(f'name_gun = {name_gun} --- str_answer = {str_answer}')
        await clb.message.edit_media(media=InputMediaPhoto(media=ph['N22']))
    elif name_gun == 'spear':
        str_answer = dgd['spear_description']
        await clb.message.edit_media(media=InputMediaPhoto(media=ph['N23']))
    await clb.message.edit_caption(
        caption=str_answer,
        reply_markup=kb.create_in_kb(1, **{'–ù–∞–∑–∞–¥': 'gun_spec'}),
        parse_mode=None)
    await clb.answer()



# spec5 --- F.data == 'armor_spec'
@router.callback_query(F.data == 'armor_spec')
async def spec5(clb: CallbackQuery):
    logging.info(f'spec5 --- clb.data = {clb.data}')

    tg_id=clb.message.chat.id
    # –∑–∞–ø—Ä–æ—Å –≤ –ë–î. –ß—Ç–æ –Ω–∞–¥–µ—Ç–æ? (—Ä—é–∫–∑–∞–∫, —à–ª–µ–º, –∫–æ—Å—Ç—é–º, –±–æ—Ç–∏–Ω–∫–∏)
    data_user = await rq.get_user_dict(tg_id)
    backpack = data_user['backpack'] ###.split('!') if '!' in left_hand else data_user['left_hand']
    helmet = data_user['helmet']  ### .split('!') if '!' in right_hand else data_user['right_hand']
    dress = data_user['dress']
    shoes = data_user['shoes']

    list_dict: list = []
    text_helmet, text_dress, text_shoes, text_backpack = '', '', '', '' # —Ç–µ–∫—Å—Ç –Ω–∞ –∫–Ω–æ–ø–∫–µ, –ø–æ–∫–∞ –ø—É—Å—Ç–æ, –¥–∞–ª—å—à–µ –º–æ–¥–∏—Ñ–∏—Ü–∏—Ä—É–µ–º
    clb_helmet, clb_dress, clb_shoes, clb_backpack = 'helmet!no_armor', 'dress!no_armor', 'shoes!no_armor', 'backpack!no_armor' # –∫–æ–ª–±—ç–∫, –µ—Å–ª–∏ –ø—É—Å—Ç–æ

    if 'helmet' in helmet:
        # –Ω–∞–ø—Ä–∏–º–µ—Ä —Ç–∞–∫, —Å –≤–æ—Å–∫–ª–∏—Ü–∞—Ç–µ–ª—å–Ω—ã–º –∑–Ω–∞–∫–æ–º helmet_kosmonavt!5
        name_armor = helmet.split('!')[0] # helmet_kosmonavt
        text_helmet = f"ü™ñ-{All_Th[name_armor]}" # —à–ª–µ–º –∫–æ—Å–º–æ–Ω–∞–≤—Ç–∞
        clb_helmet = f'{name_armor}!armor_description' # helmet_kosmonavt!armor_description

        xp = data_user['xp_helmet'] # –ø–µ—Ä–µ–≤–æ–¥ –∞–∫—Ç—É–∞–ª—å–Ω–æ–≥–æ –•–ü –≤ –ø—Ä–æ—Ü–µ–Ω—Ç—ã, –∑–∞–ø–∏—Å—å –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö –∞–∫—Ç—É–∞–ª—å–Ω–æ–≥–æ –ø—Ä–æ—Ü–µ–Ω—Ç–∞ –±—Ä–æ–Ω–∏ –∏–ª–∏ —Ä—é–∫–∑–∞–∫–∞
        new_percent = (100 * xp) / dict_percent_xp[name_armor]
        new_percent = round(new_percent) if new_percent >= 1 else int(new_percent)

        if new_percent >=1: # –∑–∞–Ω—É–ª—è–µ–º –≤ —Ç–∞–ª–∏—Ü–µ User
            text_helmet_percent = f'{new_percent} %' # —Ç–µ–∫—Å—Ç –∫–Ω–æ–ø–∫–∏
            clb_helmet_percent = f'{name_armor}!armor_percent' # –∫–æ–ª–±—ç–∫ –∫–Ω–æ–ø–∫–∏
            list_dict.append([{text_helmet: clb_helmet}, {text_helmet_percent: clb_helmet_percent}]) # –¥–æ–±–∞–≤–ª—è–µ–º —Ç–µ–∫—Å—Ç –∏ –∫–æ–ª–±—ç–∫ –∫–Ω–æ–ø–æ–∫

            # —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –Ω–æ–≤–æ–≥–æ –∞–∫—Ç—É–∞–ª—å–Ω–æ –ø—Ä–æ—Ü–µ–Ω—Ç–∞ –≤ —Ç–∞–±–ª–∏—Ü—É User
            await rq.set_user(tg_id, 'helmet', f'{name_armor}!{new_percent}')


        else: # –∑–∞–Ω—É–ª—è–µ–º –≤ —Ç–∞–ª–∏—Ü–µ User —ç—Ç–∏ —Å—Ç—Ä–æ–∫–∏ –∏ –ø–∏—à–µ–º –û–¢–°–£–¢–°–¢–í–£–ï–¢
            await rq.set_user(tg_id, 'helmet', '')
            await rq.set_user(tg_id, 'xp_helmet', '')
            text_helmet = "ü™ñ –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç"
            list_dict.append([{text_helmet: clb_helmet}])
    else:
        text_helmet = "ü™ñ –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç"  # clb_helmet = 'helmet!no_armor' —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
        list_dict.append([{text_helmet: clb_helmet}])




    if 'dress' in dress:
        # –Ω–∞–ø—Ä–∏–º–µ—Ä —Ç–∞–∫, —Å –≤–æ—Å–∫–ª–∏—Ü–∞—Ç–µ–ª—å–Ω—ã–º –∑–Ω–∞–∫–æ–º backpack_leana!10
        name_armor = dress.split('!')[0]
        text_ = f"ü¶∫-{All_Th[name_armor]}"
        clb_ = f'{name_armor}!armor_description'
        xp = data_user['xp_dress'] # –ø–µ—Ä–µ–≤–æ–¥ –∞–∫—Ç—É–∞–ª—å–Ω–æ–≥–æ –•–ü –≤ –ø—Ä–æ—Ü–µ–Ω—Ç—ã, –∑–∞–ø–∏—Å—å –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö –∞–∫—Ç—É–∞–ª—å–Ω–æ–≥–æ –ø—Ä–æ—Ü–µ–Ω—Ç–∞ –±—Ä–æ–Ω–∏ –∏–ª–∏ —Ä—é–∫–∑–∞–∫–∞
        new_percent = (100 * xp) / dict_percent_xp[name_armor]
        new_percent = round(new_percent) if new_percent >= 1 else int(new_percent)
        if new_percent >=1: # –∑–∞–Ω—É–ª—è–µ–º –≤ —Ç–∞–ª–∏—Ü–µ User
            text_percent = f'{new_percent} %' # —Ç–µ–∫—Å—Ç –∫–Ω–æ–ø–∫–∏
            clb_percent = f'{name_armor}!armor_percent' # –∫–æ–ª–±—ç–∫ –∫–Ω–æ–ø–∫–∏
            list_dict.append([{text_: clb_}, {text_percent: clb_percent}]) # –¥–æ–±–∞–≤–ª—è–µ–º —Ç–µ–∫—Å—Ç –∏ –∫–æ–ª–±—ç–∫ –∫–Ω–æ–ø–æ–∫
            # —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –Ω–æ–≤–æ–≥–æ –∞–∫—Ç—É–∞–ª—å–Ω–æ –ø—Ä–æ—Ü–µ–Ω—Ç–∞ –≤ —Ç–∞–±–ª–∏—Ü—É User
            await rq.set_user(tg_id, 'dress', f'{name_armor}!{new_percent}')

        else: # –∑–∞–Ω—É–ª—è–µ–º –≤ —Ç–∞–ª–∏—Ü–µ User —ç—Ç–∏ —Å—Ç—Ä–æ–∫–∏ –∏ –ø–∏—à–µ–º –û–¢–°–£–¢–°–¢–í–£–ï–¢
            await rq.set_user(tg_id, 'dress', '')
            await rq.set_user(tg_id, 'xp_dress', '')
            text_ = "ü¶∫ –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç"
            list_dict.append([{text_: clb_}])
    else:
        text_ = "ü¶∫ –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç"
        list_dict.append([{text_: clb_dress}])

    if 'shoes' in shoes:
        # –Ω–∞–ø—Ä–∏–º–µ—Ä —Ç–∞–∫, —Å –≤–æ—Å–∫–ª–∏—Ü–∞—Ç–µ–ª—å–Ω—ã–º –∑–Ω–∞–∫–æ–º backpack_leana!10
        name_armor = shoes.split('!')[0]
        text_ = f"üëû-{All_Th[name_armor]}"
        clb_ = f'{name_armor}!armor_description'
        xp = data_user['xp_shoes'] # –ø–µ—Ä–µ–≤–æ–¥ –∞–∫—Ç—É–∞–ª—å–Ω–æ–≥–æ –•–ü –≤ –ø—Ä–æ—Ü–µ–Ω—Ç—ã, –∑–∞–ø–∏—Å—å –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö –∞–∫—Ç—É–∞–ª—å–Ω–æ–≥–æ –ø—Ä–æ—Ü–µ–Ω—Ç–∞ –±—Ä–æ–Ω–∏ –∏–ª–∏ —Ä—é–∫–∑–∞–∫–∞
        new_percent = (100 * xp) / dict_percent_xp[name_armor]
        new_percent = round(new_percent) if new_percent >= 1 else int(new_percent)
        if new_percent >=1: # –∑–∞–Ω—É–ª—è–µ–º –≤ —Ç–∞–ª–∏—Ü–µ User
            text_percent = f'{new_percent} %' # —Ç–µ–∫—Å—Ç –∫–Ω–æ–ø–∫–∏
            clb_percent = f'{name_armor}!armor_percent' # –∫–æ–ª–±—ç–∫ –∫–Ω–æ–ø–∫–∏
            list_dict.append([{text_: clb_}, {text_percent: clb_percent}]) # –¥–æ–±–∞–≤–ª—è–µ–º —Ç–µ–∫—Å—Ç –∏ –∫–æ–ª–±—ç–∫ –∫–Ω–æ–ø–æ–∫
            # —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –Ω–æ–≤–æ–≥–æ –∞–∫—Ç—É–∞–ª—å–Ω–æ –ø—Ä–æ—Ü–µ–Ω—Ç–∞ –≤ —Ç–∞–±–ª–∏—Ü—É User
            await rq.set_user(tg_id, 'shoes', f'{name_armor}!{new_percent}')

        else: # –∑–∞–Ω—É–ª—è–µ–º –≤ —Ç–∞–ª–∏—Ü–µ User —ç—Ç–∏ —Å—Ç—Ä–æ–∫–∏ –∏ –ø–∏—à–µ–º –û–¢–°–£–¢–°–¢–í–£–ï–¢
            await rq.set_user(tg_id, 'shoes', '')
            await rq.set_user(tg_id, 'xp_shoes', '')
            text_ = "üëû –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç"
            list_dict.append([{text_: clb_}])
    else:
        text_ = "üëû –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç"
        list_dict.append([{text_: clb_shoes}])


    if 'foliage' in backpack or 'leana' in backpack:
        # –Ω–∞–ø—Ä–∏–º–µ—Ä —Ç–∞–∫, —Å –≤–æ—Å–∫–ª–∏—Ü–∞—Ç–µ–ª—å–Ω—ã–º –∑–Ω–∞–∫–æ–º backpack_leana!10
        name_armor = backpack.split('!')[0]
        text_ = f"üéí-{All_Th[name_armor]}"
        clb_ = f'{name_armor}!armor_description'
        xp = data_user['xp_backpack'] # –ø–µ—Ä–µ–≤–æ–¥ –∞–∫—Ç—É–∞–ª—å–Ω–æ–≥–æ –•–ü –≤ –ø—Ä–æ—Ü–µ–Ω—Ç—ã, –∑–∞–ø–∏—Å—å –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö –∞–∫—Ç—É–∞–ª—å–Ω–æ–≥–æ –ø—Ä–æ—Ü–µ–Ω—Ç–∞ –±—Ä–æ–Ω–∏ –∏–ª–∏ —Ä—é–∫–∑–∞–∫–∞
        new_percent = (100 * xp) / dict_percent_xp[name_armor]
        new_percent = round(new_percent) if new_percent >= 1 else int(new_percent)
        if new_percent >=1: # –∑–∞–Ω—É–ª—è–µ–º –≤ —Ç–∞–ª–∏—Ü–µ User
            text_percent = f'{new_percent} %' # —Ç–µ–∫—Å—Ç –∫–Ω–æ–ø–∫–∏
            clb_percent = f'{name_armor}!armor_percent' # –∫–æ–ª–±—ç–∫ –∫–Ω–æ–ø–∫–∏
            list_dict.append([{text_: clb_}, {text_percent: clb_percent}]) # –¥–æ–±–∞–≤–ª—è–µ–º —Ç–µ–∫—Å—Ç –∏ –∫–æ–ª–±—ç–∫ –∫–Ω–æ–ø–æ–∫
            # —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –Ω–æ–≤–æ–≥–æ –∞–∫—Ç—É–∞–ª—å–Ω–æ –ø—Ä–æ—Ü–µ–Ω—Ç–∞ –≤ —Ç–∞–±–ª–∏—Ü—É User
            await rq.set_user(tg_id, 'backpack', f'{name_armor}!{new_percent}')

        else: # –∑–∞–Ω—É–ª—è–µ–º –≤ —Ç–∞–ª–∏—Ü–µ User —ç—Ç–∏ —Å—Ç—Ä–æ–∫–∏ –∏ –ø–∏—à–µ–º –û–¢–°–£–¢–°–¢–í–£–ï–¢
            await rq.set_user(tg_id, 'backpack', '')
            await rq.set_user(tg_id, 'xp_backpack', '')
            text_ = "üéí –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç"
            list_dict.append([{text_: clb_}])
    else:
        text_ = "üéí –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç"
        list_dict.append([{text_: clb_backpack}])

    await clb.message.edit_media(media=InputMediaPhoto(media=ph['N4']))
    list_dict.append([{'–ù–∞–∑–∞–¥': 'specifications_inner'}])
    #logging.info(f'list_dict = {list_dict}')
    keyboard = kb.create_in_kb_from_list_dict(list_dict=list_dict)
    await clb.message.edit_caption(caption='–ù–∞ –≤–∞—Å –Ω–∞–¥–µ—Ç–æ:', reply_markup=keyboard)



# spec6 --- F.data.endwith('!no_armor') F.data.endswith('!armor_description')
@router.callback_query(F.data.endswith('!no_armor'))
@router.callback_query(F.data.endswith('!armor_description'))
async def spec6(clb: CallbackQuery):
    logging.info(f'spec6 --- clb.data = {clb.data}')

    armor = clb.data.split('!')[0]

    if clb.data.endswith('!armor_description'):
        await clb.message.edit_media(media=InputMediaPhoto(media=ph[armor]))


        if armor.startswith('backpack'):
            await clb.message.edit_caption(
                caption=f'{dict_armor[armor][0]} {dict_armor[armor][1]}',
                reply_markup=kb.create_in_kb(1, **{'–ù–∞–∑–∞–¥': 'armor_spec'})
            )
        else:
            await clb.message.edit_caption(
                caption=f'{dict_armor[armor][0]}\n–ë–∞–ª–ª–∏—Å—Ç–∏—á–µ—Å–∫–∞—è –∑–∞—â–∏—Ç–∞-{dict_armor[armor][1]}'
                        f'\n–•–∏–º–∏—á–µ—Å–∫–∞—è –∑–∞—â–∏—Ç–∞-{dict_armor[armor][2]}\n–≠–ª–µ–∫—Ç—Ä–∏—á–µ—Å–∫–∞—è –∑–∞—â–∏—Ç–∞-{dict_armor[armor][3]}',
                reply_markup=kb.create_in_kb(1, **{'–ù–∞–∑–∞–¥': 'armor_spec'})
            )

    elif clb.data.endswith('no_armor'):
        await clb.message.edit_media(media=InputMediaPhoto(media=ph[armor]))
        if 'backpack' in clb.data:
            answer = '–†—é–∫–∑–∞–∫ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç'
        elif 'helmet' in clb.data:
            answer = '–®–ª–µ–º –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç'
        elif 'dress' in clb.data:
            answer = '–ö–æ—Å—Ç—é–º –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç'
        else:
            answer = '–ë–æ—Ç–∏–Ω–∫–∏ –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç'
        await clb.message.edit_caption(
                caption=answer,
                reply_markup=kb.create_in_kb(1, **{'–ù–∞–∑–∞–¥': 'armor_spec'})
            )



# spec7 --- F.data.endwith('!armor_percent') --- F.data.endswith('armor_percent_backpack')
@router.callback_query(F.data.endswith('armor_percent'))
@router.callback_query(F.data.endswith('armor_percent_backpack'))
@router.callback_query(F.data.endswith('gun_percent')) # spear!gun_percent
async def spec7(clb: CallbackQuery):
    logging.info(f"spec7 --- armor = clb.data.split('!')[0] = {clb.data.split('!')[0]} --- clb.data = {clb.data}")

    # –ó–¥–µ—Å—å —Ç–∞–∫–∂–µ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç—Å—è –∏ Gun. –ù–æ –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è –±—É–¥–µ—Ç —É –≤—Å–µ—Ö armor
    # –î–ª—è –æ—Ä—É–∂–∏—è armor —ç—Ç–æ left_hand right_hand

    armor = clb.data.split('!')[0]

    data_user = await rq.get_user_dict(tg_id=clb.message.chat.id)
    if 'helmet' in armor or 'dress' in armor or 'shoes' in armor or 'backpack' in armor: # –Ω–∞–ø—Ä–∏–º–µ—Ä helmet_kosmonavt!55
        part_armor = armor.split('_')[0] # –Ω–∞–ø—Ä–∏–º–µ—Ä helmet
        percent = data_user[part_armor].split('!')[-1]
        logging.info(f'armor{armor} --- percent = {percent}')
    elif ('left_hand'==armor and data_user[armor] == '') or ('right_hand'==armor and data_user[armor] == ''):
        armor = 'nothink'
        logging.info(f' nothink --- armor = {armor}')
    else: # –Ω–∞–ø—Ä–∏–º–µ—Ä G17!55
        percent = data_user[armor].split('!')[-1] # –Ω–∞–ø—Ä–∏–º–µ—Ä G17
        armor = data_user[armor].split('!')[0] # –ø–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª—è–µ–º armor –¥–ª—è –æ—Ä—É–∂–∏—è. –í–º–µ—Å—Ç–æ left_hand right_hand
        logging.info(f'armor = {armor} --- percent = {percent}')

    location = data_user['location']

    await clb.message.edit_media(media=InputMediaPhoto(media=ph[armor])) # —ç—Ç–æ –æ–¥–Ω–∞ –Ω–∞ –≤—Å–µ—Ö —Å–º–µ–Ω–∞ –∫–∞—Ä—Ç–∏–Ω–∫–∏ –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é –≤–µ—â–∏ = armor


    if armor.startswith('backpack'): # –¥–ª—è —Ä—é–∫–∑–∞–∫–æ–≤ –†–Æ–ö–ó–ê–ö –º–æ–∂–Ω–æ —Å–Ω—è—Ç—å –≤ –õ–Æ–ë–û–ô –ª–æ–∫–∞—Ü–∏–∏
            keyboard = kb.create_in_kb(1, **{'–°–Ω—è—Ç—å': f'{clb.data}!put_off_backpack', '–ù–∞–∑–∞–¥': 'armor_spec'})

    # —É —Ä—é–∫–∑–∞–∫–∞ clb.data = list_[0]}!armor_percent_backpack', —É –æ—Å—Ç–∞–ª—å–Ω—ã—Ö list_[0]}!armor_percent'
    if location == 'landing_place': # —Å–Ω—è—Ç—å –±—Ä–æ–Ω–Ω—é –∏ –æ—Ä—É–∂–∏–µ –º–æ–∂–Ω–æ —Ç–æ–ª—å–∫–æ –Ω–∞ –õ–æ–∫–∞—Ü–∏–∏ 'landing_place'
        if 'helmet' in armor or 'dress' in armor or 'shoes' in armor: # –¥–ª—è –±—Ä–æ–Ω–∏
            keyboard = kb.create_in_kb(1, **{'–°–Ω—è—Ç—å': f'{clb.data}!put_off_armor', '–ù–∞–∑–∞–¥': 'armor_spec'})
        elif 'G17' in armor or 'spear' in armor or 'nothink' in armor: # –¥–ª—è  –æ—Ä—É–∂–∏—è
            if armor == 'nothink': # –º–æ–¥–∏—Ñ–∏—Ü–∏—Ä—É–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É. –î–ª—è –æ—Å—Ç–∞–ª—å–Ω—ã—Ö –∫–Ω–æ–ø–∫–∞ —Å–Ω—è—Ç—å –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É–µ—Ç
                keyboard = kb.create_in_kb(1, **{'–ù–∞–∑–∞–¥': 'gun_spec'})
            else:
                keyboard = kb.create_in_kb(1, **{'–°–Ω—è—Ç—å': f'{clb.data}!put_off_armor', '–ù–∞–∑–∞–¥': 'gun_spec'})

    else: # –ù–ï –¥–ª—è –ª–æ–∫–∞—Ü–∏–∏ 'landing_place'
        if clb.data.endswith('armor_percent'):
            keyboard = kb.create_in_kb(1, **{'–ù–∞–∑–∞–¥': 'armor_spec'})
        else:
            keyboard = kb.create_in_kb(1, **{'–ù–∞–∑–∞–¥': 'gun_spec'})

    if armor.startswith('backpack'): # –¥–ª—è —Ä—é–∫–∑–∞–∫–∞
        await clb.message.edit_caption(
            caption=f'{percent}% —Å–æ—Å—Ç–æ—è–Ω–∏–µ —Ä—é–∫–∑–∞–∫–∞\n {dict_armor[armor][1]}', #dict_armor[armor][1] = '4 —è—á–µ–π–∫–∏ —Ä—é–∫–∑–∞–∫–∞ \n 2 –∫–∞—Ä–º–∞–Ω–∞'
            reply_markup=keyboard
        )

    elif armor in ['G17', 'spear', 'nothink']: # –¥–ª—è –æ—Ä—É–∂–∏—è

        await clb.message.edit_caption(
            caption=
                f'–î–∞–ª—å–Ω–∏–π –±–æ–π {dgd[f"{armor}_battle"][0][0]}\n'
                f'–°—Ä–µ–¥–Ω–∏–π –±–æ–π {dgd[f"{armor}_battle"][0][1]}\n'
                f'–ë–ª–∏–∂–Ω–∏–π –±–æ–π {dgd[f"{armor}_battle"][0][2]}\n',
            reply_markup=keyboard
        )


    elif part_armor in ['helmet', 'dress', 'shoes']: # –¥–ª—è –±—Ä–æ–Ω–∏
        b_demage, h_demage, e_demage =  dict_armor[armor][1], dict_armor[armor][2], dict_armor[armor][3]


        ### –∂–¥—É –ø–æ—è—Å–Ω–µ–Ω–∏–π –∫–∞–∫ —Ä–∞—Å—Å—á–∏—Ç—ã–≤–∞—å –Ω–æ–≤—ã–µ –ø—Ä–æ—Ü–µ–Ω—Ç—ã
        ### –ó–¥–µ—Å—å –±—É–¥–µ—Ç —Ñ—É–Ω–∫—Ü–∏—è, –∫–æ—Ç–æ—Ä–∞—è –º–æ–∂–∏—Ñ–∏—Ü–∏—Ä—É–µ—Ç b_demage, h_demage, e_demage

        await clb.message.edit_caption(
            caption=f'{percent}%-—Å–æ—Å—Ç–æ—è–Ω–∏–µ –±—Ä–æ–Ω–∏\n{b_demage}%-–∑–∞—â–∏—Ç–∞ –æ—Ç –±–∞–ª–ª–∏—Å—Ç–∏—á–µ—Å–∫–æ–≥–æ —É—Ä–æ–Ω–∞\n'
                    f'{h_demage}%-–∑–∞—â–∏—Ç–∞ –æ—Ç —Ö–∏–º–∏—á–µ—Å–∫–æ–≥–æ —É—Ä–æ–Ω–∞\n{e_demage}%-–∑–∞—â–∏—Ç–∞ –æ—Ç —Ö–∏–º–∏—á–µ—Å–∫–æ–≥–æ —É—Ä–æ–Ω–∞',
            reply_markup=keyboard
        )



# spec8 --- F.data.endwith('!put_off_armor')
@router.callback_query(F.data.endswith('!put_off_armor'))#, and_f (F.data.startswith('helmet'), F.data.startswith('dress'), F.data.startswith('shoes'))) #
async def spec8(clb: CallbackQuery):
    logging.info(f'spec8 --- clb.data = {clb.data}')

    # right_hand!gun_percent!put_off_armor
    if 'helmet' in clb.data or 'dress' in clb.data or 'shoes' in clb.data:
        armor = clb.data.split('!')[0]
        data_armor = (await rq.get_user_dict(tg_id=clb.message.chat.id))[armor.split('_')[0]]
        percent = data_armor.split('!')[-1]
    else:
        hand = clb.data.split('!')[0]
        data_armor = (await rq.get_user_dict(tg_id=clb.message.chat.id))[hand]
        armor = data_armor.split('!')[0]
        percent = data_armor.split('!')[1]


    # –ï—Å–ª–∏ —Ä—é–∫–∑–∞–∫ –Ω–µ –Ω–∞–¥–µ—Ç, —Ç–æ –∫–Ω–æ–ø–∫–∞ "—Ä—é–∫–∑–∞–∫" –Ω–µ –Ω—É–∂–Ω–∞
    backpack = await hf.what_backpack_put_on(tg_id=clb.message.chat.id)
    if backpack in ['backpack_foliage', 'backpack_leana']:
        if 'helmet' in clb.data or 'dress' in clb.data or 'shoes' in clb.data:
            keyboard = kb.create_in_kb(2, **{'—à–∫–∞—Ñ':f'{armor}!{percent}!put_off_armor_wardrobe', '—Ä—é–∫–∑–∞–∫': f'{armor}!{percent}!put_off_armor_backpack', '–ù–∞–∑–∞–¥': 'armor_spec'})
        else:
            keyboard = kb.create_in_kb(2, **{'—à–∫–∞—Ñ':f'{armor}!{percent}!{hand}!put_off_armor_wardrobe', '—Ä—é–∫–∑–∞–∫': f'{armor}!{percent}!{hand}!put_off_armor_backpack', '–ù–∞–∑–∞–¥': 'gun_spec'})
    else:
        if 'helmet' in clb.data or 'dress' in clb.data or 'shoes' in clb.data:
            keyboard = kb.create_in_kb(2, **{'—à–∫–∞—Ñ':f'{armor}!{percent}!put_off_armor_wardrobe', '–ù–∞–∑–∞–¥': 'armor_spec'})
        else:
            keyboard = kb.create_in_kb(2, **{'—à–∫–∞—Ñ':f'{armor}!{percent}!{hand}!put_off_armor_wardrobe', '–ù–∞–∑–∞–¥': 'gun_spec'})
    await clb.message.edit_caption(
            caption=f'–ö—É–¥–∞ —Å–Ω–∏–º–∞–µ–º\n{All_Th[armor]} {percent}%\n\n',
            reply_markup=keyboard
        )


# spec9 --- F.data.endswith('backpack_armor_percent') --- F.data.endswith('!put_off_armor_wardrobe')
@router.callback_query(F.data.endswith('put_off_backpack')) #  —É —Ä—é–∫–∑–∞–∫–∞ clb.data = list_[0]}!backpack_armor_percent'
@router.callback_query(F.data.endswith('!put_off_armor_wardrobe'))
async def spec9(clb: CallbackQuery):
    logging.info(f'spec9 --- clb.data = {clb.data}')

    tg_id=clb.message.chat.id

    if clb.data.endswith('!put_off_armor_wardrobe'): # –µ—Å–ª–∏ –ø–æ–ª–æ–∂–∏—Ç—å –≤ —à–∫–∞—Ñ
        armor = clb.data.split('!')[0]
        percent = clb.data.split('!')[1]
    else: # –µ—Å–ª–∏ –ø–æ–ª–æ–∂–∏—Ç—å –≤ —Ä—é–∫–∑–∞–∫
        armor = clb.data.split('!')[0]
        data_backpack = (await rq.get_user_dict(tg_id))[armor.split('_')[0]]
        percent = data_backpack.split('!')[-1]
        xp_armor = (await rq.get_user_dict(tg_id))[armor.split('_')[0]]

    #if 'G17' in clb.data or 'spear' in clb.data or 'nothink' in clb.data:
     #   hand = clb.data.split('!')[2]

    if 'backpack' in clb.data: # –∏–∑ –Ω–∞–¥–µ—Ç–æ–≥–æ —Ä—é–∫–∑–∞–∫–∞ –ø–µ—Ä–µ–¥ —Å–Ω—è—Ç–∏–µ–º —É–¥–∞–ª—è–µ–º –≤—Å–µ –≤–µ—â–∏
        await hf.delete_all_things_from_put_on_backpack(tg_id)### –Ω–∞–¥–æ –ª–∏ —É–¥–æ–ª—è—Ç—å –∏–∑ User —Ä—é–∫–∑–∞–∫ –∏ —Ö–ø?

    ### –ò–∑ —Ç–∞–±–ª–∏—Ü—ã User —É–±—Ä–∞—Ç—å  –≤ –®–∫–∞—Ñ –ø–æ–ª–æ–∂–∏—Ç—å
    if 'helmet' in clb.data or 'dress' in clb.data or 'shoes' in clb.data or 'backpack' in clb.data:
        new_percent = await hf.put_off_armor_or_gun_and_take_this_on_wardrobe_or_backpack(
            tg_id=tg_id,
            armor_or_gun=armor,
            wardrobe_or_backpack='wardrobe'
        )
        #if 'backpack' not in clb.data:
        #    await rq.set_user(tg_id=tg_id, name_column=armor.split('_')[0], current_value='')
        #else:
        #    await rq.set_user(tg_id=tg_id, name_column=armor.split('_')[0], current_value='no_backpack')
    else: # –¥–ª—è –æ—Ä—É–∂–∏—è
        hand = clb.data.split('!')[2]
        new_percent = await hf.put_off_armor_or_gun_and_take_this_on_wardrobe_or_backpack(
            tg_id=clb.message.chat.id,
            armor_or_gun=armor,
            wardrobe_or_backpack='wardrobe',
            hand = hand
        )
        await rq.set_user(tg_id=tg_id, name_column=hand, current_value='')
        logging.info(f'hand = {hand}')

    await clb.message.edit_media(media=InputMediaPhoto(media=ph['N24']))
    await clb.message.edit_caption(
            caption=f'–í—ã –ø–æ–ª–æ–∂–∏–ª–∏ –≤ —à–∫–∞—Ñ\n{All_Th[armor]} {new_percent}%\n\n',
            reply_markup=kb.create_in_kb(1, **{'–æ–∫':'checking_where_avatar_is_located'})
        )


# spec10 --- F.data.endswith('put_off_armor_backpack')
@router.callback_query(F.data.endswith('put_off_armor_backpack'))
async def spec10(clb: CallbackQuery):
    logging.info(f'spec10 --- clb.data = {clb.data}')
    armor = clb.data.split('!')[0]
    percent = clb.data.split('!')[1]

    if 'G17' in clb.data or 'spear' in clb.data or 'nothink' in clb.data:
        hand = clb.data.split('!')[2]
    else:
        hand = 'nohand'



    tg_id = clb.message.chat.id
    #backpack = await hf.what_backpack_put_on(tg_id=tg_id)
    list_cell_button: list = await hf.create_list_for_create_keyboard_with_colored_cell_without_yellow_cell(
        tg_id=tg_id,
        prefix=f'spec10?{armor}?{percent}?{hand}'
    )
    logging.info(f'list_cell_button --- list_cell_button --- list_cell_button = {list_cell_button}')
    if 'G17' in clb.data or 'spear' in clb.data or 'nothink' in clb.data:
        keyboard = kb.create_keyboard_from_colored_cell(list_cell=list_cell_button, clb_back=f'{hand}!{percent}!put_off_armor')
    else:
        keyboard = kb.create_keyboard_from_colored_cell(list_cell=list_cell_button, clb_back=f'{armor}!{percent}!put_off_armor')
    await clb.message.edit_media(media=InputMediaPhoto(media=ph['N38']))
    await clb.message.edit_caption(
            caption=f'–í –∫–∞–∫—É—é —è—á–µ–π–∫—É –∫–ª–∞–¥—ë–º?\n{All_Th[armor]} {percent}%\n\n',
            reply_markup=keyboard)


# spec11 --- F.data.startswith('spec10')
@router.callback_query(F.data.startswith('spec10'))
async def spec11(clb: CallbackQuery):
    logging.info(f'spec11 --- clb.data = {clb.data}') # prefix=f'spec10?{armor}?{percent}' clb.data = spec10!green!backpack_leana!cell_2

    tg_id = clb.message.chat.id
    armor = clb.data.split('?')[1]
    percent = clb.data.split('?')[2]
    hand = clb.data.split('?')[3].split('!')[0]

    #backpack = clb.data.split('!')[-2]
    color = clb.data.split('!')[-3]
    cell = clb.data.split('!')[-1]

    if color == 'red':
        keyboard = kb.create_in_kb(1, **{'–ù–∞–∑–∞–¥': f'{armor}!{percent}!{hand}!put_off_armor_backpack'})
        await clb.message.edit_media(media=InputMediaPhoto(media=ph['N17']))
        await clb.message.edit_caption(
            caption=f'–°—é–¥–∞ –ø–æ–ª–æ–∂–∏—Ç—å –Ω–µ–ª—å–∑—è\n',
            reply_markup=keyboard)

    elif color == 'green':
        keyboard = kb.create_in_kb(1, **{'–û–∫': 'checking_where_avatar_is_located'})



        if 'helmet' in armor or 'dress' in armor or 'shoes' in armor or 'backpack' in armor:

            if 'backpack' not in armor:
                await rq.set_user(tg_id=tg_id, name_column=armor.split('_')[0], current_value='')
            else:
                await rq.set_user(tg_id=tg_id, name_column=armor.split('_')[0], current_value='no_backpack')
        else:
            await rq.set_user(tg_id=tg_id, name_column=hand, current_value='')




        await rq.set_user(tg_id, armor.split('_')[0], '')
        await rq.set_backpack_and_cell_with_chek_put_on_backpack(
            tg_id=tg_id,
            #name_column_backpack=cell,
            #current_value_backpack=percent,
            cell=cell,
            name_column_cell=armor,
            current_value_cell=percent
        )

        await clb.message.edit_media(media=InputMediaPhoto(media=ph['N6']))
        await clb.message.edit_caption(
            caption=f'–í—ã –ø–æ–ª–æ–∂–∏–ª–∏\n {All_Th[armor]} {percent} % –≤ {LBut[cell.upper()]}',
            reply_markup=keyboard)
